#ifdef _WIN32
#include <windows.h>
#define _USE_MATH_DEFINES
#endif
#define PI 3.14159265f // PI tá tudo em maiúsculo porque constantes se escrevem tudo em maiúsculo
#include <math.h>

#include <GL/gl.h> // funcoes principais
#include <GL/glu.h> // funcoes auxiliares, mas tb facilita em alguns detalhes
#include <GL/glut.h> /* biblioteca de gerenciamento de janelas, input...*/

#include <stdio.h>

void drawCircle(float r) //radius ou raio
{
	glBegin(GL_POLYGON);
	for (float ang = 0; ang <= 2 * PI; ang += 0.01f)
	{
		float x = r*sin(ang);
		float y = r*cos(ang);
		glVertex2f(x, y);
	}
	glEnd();
}

void display()
{
	static float t = 0.1;
	t *= 1.008f;

	//define a cor do fundo
	glClearColor(0.2 + t / 2, t, 0.57 + t / 8, 1); // R, G, B, A de 0 a 1, A (alpha) nao e utilizado

												   //limpa a tela com a cor definida no glClearColor
	glClear(GL_COLOR_BUFFER_BIT);

	//define a cor usada por todos os vertices definidos apos
	glColor3f(1, 1, 1); // R, G, B de 0 a 1

						// define os vertices de triangulo (ver OpenGL primitives no Google Imagens)

	/*
	glBegin(GL_TRIANGLES);
	glColor3f(1, 0, 1);
	glVertex2f(-1, -1); //	X, Y, a tela vai de -1, -1 (inferior esquerda) e vai até 1, 1 (superior direita)
	glColor3f(1, 0, 1);
	glVertex2f(-1, 1);
	glColor3f(1, 0, 1);
	glVertex2f(1, 1);
	glColor3f(0, 1, 1);
	glVertex2f(-1, -1);
	glColor3f(0, 1, 1);
	glVertex2f(1, -1);
	glColor3f(0, 1, 1);
	glVertex2f(1, 1);
	glEnd();

	for (float j = 0.2; j >= 0; j -= 0.05)
	{
		glColor3f(2 * j*t / 3.1f, j / 2, j);
		drawCircle(j*t);
	}
	*/


	glutSwapBuffers();

	glutPostRedisplay();


}

void reshape(int w, int h)
{
	// redimensiona a tela
	glViewport(0, 0, w, h);
}



int main(int argc, char* argv[])
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(600, 600); //tamanho da janela

	glutCreateWindow("Aula 1"); // cria uma janela com o titulo escolhido
	glutReshapeFunc(reshape); // funcao que sera chamada para redimensionada a janela
	glutDisplayFunc(display); // funcao que sera chamada para desenhar

	glutMainLoop(); //loop de eventos do freeglut
	return 0;
}




// Tools - Extensions and Updates - NuGet
// Tools - Nuget Packages Manager - Manage Nuget Packages for Solution... - Browse - NupenGL - baixar os dois
// Propriedades do projeto - C/C++ - General - desativar SDL
//